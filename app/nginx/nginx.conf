user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

# http {
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;
    
#     log_format main '$remote_addr - $remote_user [$time_local] "$request" '
#                     '$status $body_bytes_sent "$http_referer" '
#                     '"$http_user_agent" "$http_x_forwarded_for"';
    
#     access_log /var/log/nginx/access.log main;
#     sendfile on;
#     keepalive_timeout 65;

#     upstream frontend {
#         server frontend:3000;
#     }

#     upstream backend {
#         server backend:8080;
#     }

#     server {
#         listen 80;
#         server_name localhost;

#         # Frontend
#         location / {
#             proxy_pass http://frontend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Backend API
#         location /api/ {
#             rewrite ^/api/(.*) /$1 break;
#             proxy_pass http://backend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # # Static files from backend
#     #     location /static/ {
#     #         proxy_pass http://backend:8080/static/;
#     #         proxy_set_header Host $host;
#     #         proxy_http_version 1.1;
#     #         proxy_set_header Upgrade $http_upgrade;
#     #         proxy_set_header Connection 'upgrade';
#     #         proxy_cache_bypass $http_upgrade;
#     #         expires 0;
#     #         add_header Cache-Control "no-cache, must-revalidate";
#     #     }
#     # }
# }
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:8080;
    }

    server {
        listen 80;
        server_name localhost;

        # Timeouts - Add these lines
        proxy_connect_timeout       800s; 
        proxy_send_timeout          800s; 
        proxy_read_timeout          800s; 
        send_timeout                800s; 


        # Frontend
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Backend API
        location /api/ {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files from backend
        location /static/ {
            proxy_pass http://backend/static/;
        }
    }
}